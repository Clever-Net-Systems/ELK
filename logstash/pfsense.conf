input{
  udp {
    port => 5190
  }
}

filter {
  grok {
    match => [ 'message', '.* %{WORD:program}:%{GREEDYDATA:rest}' ]
  }

  if [program] == "filterlog" {
    # Grab fields up to IP version. The rest will vary depending on IP version.
    grok {
      match => [ 'rest', '%{INT:rule_number},%{INT:sub_rule_number},,%{INT:tracker_id},%{WORD:interface},%{WORD:reason},%{WORD:action},%{WORD:direction},%{WORD:ip_version},%{GREEDYDATA:rest2}' ]
    }
  }

  mutate {
    replace => [ 'message', '%{rest2}' ]
  }

  if [ip_version] == "4" {
    # IPv4. Grab field up to dest_ip. Rest can vary.
    grok {
      match => [ 'message', '%{WORD:tos},,%{INT:ttl},%{INT:id},%{INT:offset},%{WORD:flags},%{INT:protocol_id},%{WORD:protocol},%{INT:length},%{IP:src_ip},%{IP:dest_ip},%{GREEDYDATA:rest3}' ]
    }
  }

  if [protocol_id] != 2 {
    # Non-IGMP has more fields.
    grok {
      match => [ 'rest3', '^%{INT:src_port:int},%{INT:dest_port:int}' ]
    }
    }else {
      # IPv6. Grab field up to dest_ip. Rest can vary.
      grok {
        match => [ 'message', '%{WORD:class},%{WORD:flow_label},%{INT:hop_limit},%{WORD:protocol},%{INT:protocol_id},%{INT:length},%{IPV6:src_ip},%{IPV6:dest_ip},%{GREEDYDATA:rest3}' ]
      }
    }

    mutate {
      replace => [ 'message', '%{rest3}' ]
      lowercase => [ 'protocol' ]
    }

    if [message] {
      # Non-ICMP has more fields
      grok {
        match => [ 'message', '^%{INT:src_port:int},%{INT:dest_port:int},%{INT:data_length}' ]
      }
    }

    mutate {
      remove_field => [ 'message' ]
      remove_field => [ 'rest' ]
      remove_field => [ 'rest2' ]
      remove_field => [ 'rest3' ]
      remove_tag => [ '_grokparsefailure' ]
      add_tag => [ 'packetfilter' ]
    }

    geoip {
      source => "src_ip"
      target => "src_ip_geo"
    }

    geoip {
      source => "dest_ip"
      target => "dest_ip_geo"
    }
  }

  output {
    elasticsearch {
      hosts => ["n1:9200", "n2:9200", "n3:9200", "n4:9200"]
      index => "pfsense"
    }
    stdout { codec => rubydebug }
  }
